const config = require('../config');
const { cmd, commands } = require('../command');
const os = require("os");
const { runtime } = require('../lib/functions');
const imageUrl = 'https://i.ibb.co/rftvFg0V/lordali.jpg';

cmd({
    pattern: "listmenu",
    react: "üìÉ",
    alias: ["panel", "commands"],
    desc: "Get Bot Menu",
    category: "main",
    use: '.menu',
    filename: __filename
},
async (conn, mek, m, { from, quoted, pushname, reply }) => {
    try {
        const selectionMessage = `
*‚ï≠‚ïê‚ïê„Äò„Äò ${config.BOT_NAME} „Äô„Äô*
*‚îÉ‚ùç  ú·¥á ü ü·¥èüëã* :*${pushname}*
*‚îÉ‚ùç ·¥ç·¥è·¥Ö·¥á* : *${config.MODE}*
*‚îÉ‚ùç ·¥ò Ä·¥á“ì…™x* : *${config.PREFIX}*
*‚îÉ‚ùç  Ä·¥Ä·¥ç* : *34.56 …¢ ô/60.79*
*‚îÉ‚ùç ·¥Ñ Ä·¥á·¥Ä·¥õ·¥è Ä* : *·¥Ñ è ô·¥á Ä ·¥ò Ä…™…¥·¥Ñ·¥á ·¥èÍú∞·¥Ñ*
*‚îÉ‚ùç ·¥Ä ü·¥°·¥Ä ès ·¥è…¥ ü…™…¥·¥á* : *${config.ALWAYS_ONLINE}*
*‚îÉ‚ùç ·¥†·¥á Äs…™·¥è…¥s* : *·¥†.1.0.0*
*‚ï∞‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ä∑*
 *‚ô°Ô∏é‚Ä¢‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚òªÔ∏é‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚Ä¢‚ô°Ô∏é*
  *‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óé*
  *‚îÉ‚ùç 1. ùêåùêÄùêàùêç ùêåùêÑùêçùêî* 
  *‚îÉ‚ùç 2. ùêÉùêéùêñùêçùêãùêéùêÄùêÉ ùêåùêÑùêçùêî*
  *‚îÉ‚ùç 3. ùêÜùêëùêéùêîùêè ùêåùêÑùêçùêî*
  *‚îÉ‚ùç 4. ùêÖùêîùêç ùêåùêÑùêçùêî*
  *‚îÉ‚ùç 5. ùêéùêìùêáùêÑùêë ùêåùêÑùêçùêî*
  *‚îÉ‚ùç 6. ùêåùêÄùêàùêç ùêåùêÑùêçùêî*
  *‚îÉ‚ùç 7. ùêéùêñùêçùêÑùêë ùêåùêÑùêçùêî* 
  *‚îÉ‚ùç 8. ùêÇùêéùêçùêïùêÑùêëùêì ùêåùêÑùêçùêî*
  *‚îÉ‚ùç 9. ùêÄùêçùêàùêåùêÑ ùêåùêÑùêçùêî*
  *‚îÉ‚ùç 10. ùêÄùêà ùêåùêÑùêçùêî*
  *‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚óé*

> ¬©·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥Ñ è ô·¥á Ä ·¥ò Ä…™…¥·¥Ñ·¥á ·¥èÍú∞·¥Ñ 
`;

        const sentMsg = await conn.sendMessage(from, {
            image: { url: imageUrl },
            caption: selectionMessage,
            contextInfo: { forwardingScore: 999, isForwarded: true },
        }, { quoted: mek });

        // ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö ‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂†‡∑è‡∂ª ‡∂Ω‡∂∂‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏
        conn.ev.on('messages.upsert', async (msgUpdate) => {
            const msg = msgUpdate.messages[0];
            if (!msg.message || !msg.message.extendedTextMessage) return;

            const userResponse = msg.message.extendedTextMessage.text.trim();
            if (msg.message.extendedTextMessage.contextInfo &&
                msg.message.extendedTextMessage.contextInfo.stanzaId === sentMsg.key.id) {

                let responseText;

                switch (userResponse) {
                    case '1': // DOWNLOAD MENU
                        responseText = `.menu`;

                        break;
                    case '2': // AI MENU
                        responseText = `.menu`;
                        break;
                    case '3': // OWNER MENU
                        responseText = `.menu`;
                        break;
                    case '4': // GROUP MENU
                        responseText = `.menu`;
                        break;
                    case '5': // INFO MENU
                        responseText = `.menu`;
                        
                        break;
                    case '6': // WALLPAPERS MENU
                        responseText = `.menu`;
               break;
                    case '7': // WALLPAPERS MENU
                        responseText = `.ownermenu`;

               break;
                    case '8': // WALLPAPERS MENU
                        responseText = `.menu`;

               break;
                    case '9': // WALLPAPERS MENU
                        responseText = `.menu`;
                      
                 break;
                    case '10': // WALLPAPERS MENU
                        responseText = `.menu`;
                      
                      
                        break;
                    default:
                        responseText = "*‚ùå Invalid option. Please enter a valid number (1-10)*";
                }

                // ‡∂≠‡∑ù‡∂ª‡∑è‡∂ú‡∂≠‡∑ä ‡∂∏‡∑ô‡∂±‡∑î‡∑Ä WhatsApp chat ‡∂ë‡∂ö‡∂ß ‡∂∫‡∑Ä‡∂∫‡∑í.
                await conn.sendMessage(from, { text: responseText }, { quoted: mek });
            }
        });

    } catch (e) {
        console.error(e);
        reply(`*‚ö† An error occurred: ${e.message}*`);
    }
});

